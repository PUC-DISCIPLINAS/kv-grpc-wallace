
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin:  'idea'

buildscript {
    repositories {
        maven { // The google mirror is less flaky than mavenCentral()
            url "https://maven-central.storage-download.googleapis.com/maven2/" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

// Note: for IntelliJ IDE to mark the generated files as source.
sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
            }
        }
    }
}

// Note: Make sure to modify the gRPC version if it is no
// longer compatible w/ the latest gradle version.
//
// Visit https://mvnrepository.com/artifact/io.grpc/grpc-protobuf
def grpcVersion = '1.29.0'

dependencies {
    repositories {
        mavenCentral()
    }
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.2'

    compileOnly group: "javax.annotation", name: "javax.annotation-api", version: "1.3.2"
    compileOnly group: "org.jetbrains", name: "annotations", version: "13.0"

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.2'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    startScripts.enabled = false

    task severGrpc(type: CreateStartScripts) {
        mainClassName = 'com.grpc.keyvalue.ServerGrpc'
        applicationName = 'grpc-server'
        outputDir = new File(project.buildDir, 'tmp')
        classpath = startScripts.classpath
    }

    task clientGrpc(type: CreateStartScripts) {
        mainClassName = 'com.grpc.keyvalue.ClientGrpc'
        applicationName = 'grpc-client'
        outputDir = new File(project.buildDir, 'tmp')
        classpath = startScripts.classpath
    }


    applicationDistribution.into('bin') {
        from(clientGrpc)
        from(severGrpc)
        fileMode = 0755
    }
}